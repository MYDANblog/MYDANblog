import pandas as pd			
from pandas import DataFrame			
import pickle			
from pickle import TRUE			
import jpype			
import asposecells			
jpype.startJVM() #open Java environment			
from asposecells.api import License, Workbook, CellsHelper, CalculationOptions, SaveFormat, PdfSaveOptions, PivotFieldType, PivotTableStyleType, PivotFieldSubtotalType, LoadOptions, FileFormatType, ShiftType, JsonUtility, JsonLayoutOptions, CellArea				

try: #try look for license in the Knime Server
    lic = License()
    lic.setLicense("/opt/knime_server/aspose/Aspose.Cells.Product.Family.lic")
except: #if none exist
    pass #then skip to next script

Filepath = flow_variables['output_Working_filePath']

output = Workbook(Filepath) #Open file

# Load KNIME Data table to Pandas Dataframe
df1 = input_table_1.copy()

sheet_lst = pd.unique(df1['Sheet_Position'])

for l in sheet_lst:
    print(l)
    sheet = l
    worksheet = output.getWorksheets().get(sheet) #get position of the sheet	
    df4 = df1[df1['Sheet_Position'] == sheet]
    for row in df4.itertuples(index=True, name='Pandas'):
        result_no = getattr(row, "Is_Result_Number")
        expression = getattr(row, "Expression")
        coord_row = getattr(row, "Coordinate_Row")
        coord_col = getattr(row, "Coordinate_Col")
        Cells = worksheet.getCells()
        Value = Cells.get(coord_row, coord_col) #select cell coordinates (row, column)
        if result_no == "YES": #run if need to convert numbers stored as text to numbers
            Value.putValue(expression, True) #try each cell if it can convert text to numbers
        else:
            Value.putValue(expression) #insert string as text

try:
    output.getWorksheets().removeAt("Evaluation Warning")
except:
    pass            
output.save(Filepath, FileFormatType.XLSX) #saves as XLSX filetype	
jpype.shutdownJVM() #close Java environment
        
output_table_1 = pd.DataFrame({"Location":[Filepath]})
